#!/usr/bin/python2.7
# -*- coding: utf-8 -*-

from urllib import quote, unquote
import json
import traceback
import time
import sys

from dfhspider.lib import *
from dfhspider.app import getItemsByKeyword
from dfhspider.connectionpool import ConnectionPool
from dfhspider.topbll import saveKeywordSearchResult

from slave_config import slave_config

db_server = {'223.4.155.152': {
    'host': '223.4.155.152',
    'user': 'cooper',
    'passwd': 'lq00744601',
    'port': 3306,
    'db': 'topspider'
}, '223.4.155.172': {
    'host': '121.199.16.12',
    'user': 'ibbd',
    'passwd': 'spider',
    'port': 3306,
    'db': 'topspider'
}}

conn = __import__('ibbdlib').get_db_conn(**db_server['223.4.155.172'])
re_conn = __import__('ibbdlib').get_redis_conn(**{
    'host': '121.199.16.12',
    'port': 6379,
    'password': 'ibbdooredisserver'
})


def ensure_schedule(re_conn):
    query = """SELECT T2.keyword
    FROM(
        SELECT DISTINCT(keyword) AS keyword
        FROM ibbd2.user_keywords T3
        WHERE T3.status='1'
        ORDER BY keyword
    ) T2
    LEFT JOIN(
        SELECT DISTINCT(keyword) AS keyword
        FROM topspider.top_itemsearchresult T1
        WHERE T1.population_tsmp > curdate()
    )T4
    ON T2.keyword = T4.keyword
    WHERE T4.keyword IS NULL"""
    print 'querying'
    keywords = [quote(row.keyword.encode('utf-8')) for row in conn.iter(query)]
    if keywords:
        print 'keywords num', len(keywords)
        re_conn.sadd('Schedule_keywordSearchResult', *keywords)
    else:
        print 'no keywords'


def ensure_complete(re_conn):
    while True:
        if re_conn.scard('Schedule_keywordSearchResult') + \
            re_conn.hlen('Schedule_keywordSearchResultError') + \
                re_conn.hlen('Schedule_keywordSearchResult_process') == 0:
            print 'schedule complete'
            break
        if re_conn.scard('Schedule_keywordSearchResult') > 0:
            print 'waiting'
            time.sleep(3)
            continue
        hkeys = re_conn.hkeys('Schedule_keywordSearchResultError') or []
        hkeys.extend(re_conn.hkeys('Schedule_keywordSearchResult_process') or [])
        re_conn.sadd('Schedule_keywordSearchResult', *hkeys)
        re_conn.delete('Schedule_keywordSearchResultError')
        re_conn.delete('Schedule_keywordSearchResult_process')
        time.sleep(10)

ensure_schedule(re_conn)
ensure_complete(re_conn)

query = \
    """SELECT DISTINCT(item_id) AS item_id
    FROM topspider.top_itemsearchresult
    WHERE population_tsmp > curdate()
    UNION
    SELECT DISTINCT item_id
    FROM ibbd2.user_shop_monitor_items
    WHERE status='1'
    """
iids = [row.item_id for row in conn.iter(query)]
print 'Schedule_itemTrade2', len(iids)
re_conn.sadd('Schedule_itemTrade2', *iids)

query = """SELECT T1.item_id
    FROM(
        SELECT DISTINCT(item_id) AS item_id
        FROM topspider.top_itemsearchresult
        WHERE population_tsmp>CURDATE()-INTERVAL 1 DAY)T1
    LEFT JOIN ibbd2.top_item1 T2
    ON T1.item_id=T2.item_id
    WHERE T2.item_id IS NULL OR T2.title=''
    UNION
    SELECT DISTINCT item_id
    FROM ibbd2.user_shop_monitor_items
    WHERE status='1'"""
iids = [row.item_id for row in conn.iter(query)]
print 'Schedule_itemFullInfo', len(iids)
re_conn.sadd('Schedule_itemFullInfo', *iids)

query = """SELECT T1.user_num_id
    FROM(
        SELECT DISTINCT(user_num_id) AS user_num_id
        FROM topspider.top_itemsearchresult
        WHERE population_tsmp>CURDATE()-INTERVAL 1 DAY)T1
    LEFT JOIN ibbd2.top_shop1 T2
    ON T1.user_num_id=T2.user_num_id
    WHERE T2.user_num_id IS NULL"""
uids = [row.user_num_id for row in conn.iter(query)]
print 'Schedule_shopFullInfo', len(uids)
re_conn.sadd('Schedule_shopFullInfo', *uids)

conn.close()
del re_conn
