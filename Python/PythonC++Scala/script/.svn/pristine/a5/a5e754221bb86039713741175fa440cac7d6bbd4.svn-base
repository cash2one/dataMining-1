<?xml version="1.0" encoding="UTF-8" ?>

<tasks>
	<task name="1" deal="sync"  depend=""> 
		<!-- 执行的语句类型由type来分 -->
		<exec type="proc"><![CDATA[
			ibbd2.sp_top_cat_search_result(DATE('{{fetch_date}}'));
			ibbd2.sp_top_item1(DATE('{{fetch_date}}'));
			ibbd2.sp_top_shop1(DATE('{{fetch_date}}'));
			ibbd2.sp_top_cat_items(DATE('{{fetch_date}}'));
		]]></exec>
	</task>
	<task name="17" deal="async" depend=""> 
		<exec type="sql"><![CDATA[
			{% for i in range(len(shop_id_interval) - 1) %}
			DROP TABLE IF EXISTS {{'topdata.%s_%d'%(his_trade_table, i+1)}};
			{% end %}
		]]></exec>
	</task>
	<task name="18" deal="async" depend="17"> 
		<exec type="sql"><![CDATA[
			{% for i in range(len(shop_id_interval) - 1) %}
			CREATE TABLE {{'topdata.%s_%d'%(his_trade_table, i+1)}} LIKE topdata.top_item_trade;
			{% end %}
		]]></exec>
	</task>
	<task name="2" deal="async" depend="18"> 
		<exec type="sql"><![CDATA[
			{% for i in range(len(shop_id_interval) - 1) %}
				INSERT IGNORE INTO {{'topdata.%s_%d'%(his_trade_table, i+1)}}
				  SELECT *, MD5(CONCAT_WS(',', item_id, nick, rank, trade_time)) 
				  FROM topspider.{{his_trade_table}} 
				  WHERE shop_id >= '{{shop_id_interval[i]}}' AND shop_id <{%if i==len(shop_id_interval)-2%}={%end%}'{{shop_id_interval[i+1]}}';
				{% end %}
		]]></exec>
	</task>
	<task name="19" deal="async" depend=""> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			DROP TABLE IF EXISTS ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
		]]></exec>
	</task>

	<task name="20" deal="async" depend="19"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			CREATE TABLE ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}} LIKE ibbd2.top_item2;
			{% end %}
		]]></exec>
	</task>

	<task name="3" deal="async" depend="2,20"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}}
			  SELECT item_id,
			      shop_id,
			      DATE(trade_time),
			      MAX(price),
			      SUM(amount),
			      COUNT(1),
			      SUM(amount * price),
			      MIN(price),
			      AVG(price),
			      COUNT(DISTINCT (CONCAT_WS('&', nick, rank))),
			        SUM(amount * price)
			      / COUNT(DISTINCT (CONCAT_WS('&', nick, rank))),
			      NOW()
			  FROM topdata.top_item_trade_his_{{fetch_date.replace('-', '')}}_{{i+1}}
			  GROUP BY item_id, DATE(trade_time);
			{% end %}
		]]></exec>
	</task>

	<task name="4" deal="sync" depend="1"> 
		<exec type="sql"><![CDATA[
			INSERT IGNORE INTO ibbd2.quota_shop_credit
	        SELECT *
	            FROM (SELECT T1.keyword,
	                      SUBSTRING_INDEX(T2.location2, ' ', 1) AS province,
	                      SUBSTRING_INDEX(T2.location2, ' ', -1) AS city,
	                      SUBSTRING_INDEX(T2.shop_rank, '_', 2) AS shop_grade,
	                      T2.shop_id,
	                      T2.user_num_id,
	                      T2.shop_name,
	                      T2.shop_type,
	                      NOW()
	                 FROM    ibbd2.top_cat_items T1
	                      LEFT JOIN
	                         ibbd2.top_shop1 T2
	                      ON T1.user_num_id = T2.user_num_id
	                WHERE     T2.user_num_id IS NOT NULL
	               GROUP BY T1.keyword,
	                        SUBSTRING_INDEX(T2.location2, ' ', 1),
	                        SUBSTRING_INDEX(T2.location2, ' ', -1),
	                        SUBSTRING_INDEX(T2.shop_rank, '_', 2),
	                        T2.user_num_id) T
	            ON DUPLICATE KEY UPDATE credit_level = T.shop_grade;
	    ]]></exec>
	</task>

	<task name="5" deal="sync" depend="1,3"> 
		<exec type="sql"><![CDATA[
			INSERT IGNORE INTO ibbd2.ststc_cat_shop_sales_detail
			  SELECT T1.keyword,
			      T2.date_of,
			      T1.user_num_id,
			      T4.wangwang,
			      SUBSTRING_INDEX(T3.location2, ' ', 1),
			      SUBSTRING_INDEX(T3.location2, ' ', -1),
			      SUM(T2.volume),
			      SUM(T2.trade_num),
			      SUM(T2.sales),
			      NOW()
			  FROM    ibbd2.top_cat_items T1
			      LEFT JOIN
			         ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}} T2
			      ON     T1.item_id = T2.item_id
			      LEFT JOIN
			         ibbd2.top_item1 T3
			      ON T1.item_id = T3.item_id
			      LEFT JOIN ibbd2.top_shop1 T4
			      ON T1.user_num_id = T4.user_num_id
			  WHERE     T2.volume IS NOT NULL
			      AND T2.item_id IS NOT NULL
			  GROUP BY T1.keyword, T2.date_of, T1.user_num_id;
	    ]]></exec>
	</task>

	<task name="6" deal="sync" depend="1,3"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.ststc_cat_dealprice
			  SELECT T1.keyword,
			      T2.date_of,
			      AVG(T2.avg_deal_price),
			      MIN(T2.min_deal_price),
			      MAX(T2.price),
			      COUNT(DISTINCT (T1.item_id)),
			      NOW()
			  FROM    ibbd2.top_cat_items T1
			      LEFT JOIN
			         ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}} T2
			      ON     T1.item_id = T2.item_id
			  WHERE T2.item_id IS NOT NULL
			      GROUP BY T1.keyword, T2.date_of;
			{% end %}
	    ]]></exec>
	</task>

	<task name="7" deal="sync" depend="1,2"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.ststc_cat_site_dealprice
			   SELECT T1.keyword,
			          CASE WHEN T1.site_id = '2' THEN 'B' ELSE 'C' END AS site,
			          T2.date_of,
			          AVG(T2.avg_deal_price),
			          MIN(T2.min_deal_price),
			          MAX(T2.price),
			          COUNT(DISTINCT (T1.item_id)),
			          NOW()
			     FROM    ibbd2.top_cat_items T1
			          LEFT JOIN
			             ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}} T2
			          ON     T1.item_id = T2.item_id
			    WHERE T2.item_id IS NOT NULL
			   GROUP BY T1.keyword,
			            CASE WHEN T1.site_id = '2' THEN 'B' ELSE 'C' END,
			            T2.date_of;
			{% end %}
	    ]]></exec>
	</task>
	<task name="8" deal="sync" depend="1,3"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
				INSERT IGNORE INTO ibbd2.ststc_shop_sales_keyword
				  SELECT T1.keyword,
				      T1.user_num_id,
				      T2.date_of,
				      SUM(T2.volume),
				      SUM(T2.trade_num),
				      SUM(T2.sales),
				      NOW()
				  FROM    ibbd2.top_cat_items T1
				      LEFT JOIN
				         ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}} T2
				      ON T1.item_id = T2.item_id
				  WHERE T2.item_id IS NOT NULL
				      AND T2.volume IS NOT NULL
				  GROUP BY T1.keyword, T1.user_num_id, T2.date_of;
				{% end %}
	    ]]></exec>
	</task>

	<!--  -->

	<task name="21" deal="async" depend="1,3"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			DROP TABLE IF EXISTS ibbd2.ststc_keyword_shop_pct_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>
	<task name="22" deal="async" depend="20"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			CREATE TABLE ibbd2.ststc_keyword_shop_pct_{{fetch_date.replace('-', '')}}_{{i+1}} LIKE ibbd2.ststc_keyword_shop_pct;
			{% end %}
	    ]]></exec>
	</task>
	<task name="9" deal="async" depend="1,2,22"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.ststc_keyword_shop_pct_{{fetch_date.replace('-', '')}}_{{i+1}}
			  SELECT T3.keyword,
			      T3.wangwang,
			      T3.date_of,
			      COUNT(DISTINCT (T3.item_id)),
			      COUNT(1),
			      SUM(T3.amount),
			      SUM(T3.price * T3.amount),
			      COUNT(DISTINCT (T3.nick)),
			        SUM(T3.price * T3.amount)
			      / COUNT(DISTINCT (T3.nick)),
			      NOW()
			  FROM (SELECT T1.keyword,
			              T3.wangwang,
			              DATE(T2.trade_time) AS date_of,
			              T2.*
			         FROM    ibbd2.top_cat_items T1
			              LEFT JOIN
			                 topdata.top_item_trade_his_{{fetch_date.replace('-', '')}}_{{i+1}} T2
			              ON     T1.item_id = T2.item_id
			              LEFT JOIN
			                 ibbd2.top_shop1 T3
			              ON T1.user_num_id=T3.user_num_id
			        WHERE    T2.item_id IS NOT NULL
			              AND T3.user_num_id IS NOT NULL) T3
			  GROUP BY T3.keyword, T3.wangwang, T3.date_of;
			{% end %}
	    ]]></exec>
	</task>

	<task name="23" deal="sync" depend="9"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.ststc_keyword_shop_pct
			  SELECT * FROM ibbd2.ststc_keyword_shop_pct_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>

	<task name="10" deal="async" depend="23"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			DROP TABLE ibbd2.ststc_keyword_shop_pct_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>

	<task name="11" deal="sync" depend="1,3"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.quota_pct_keyword
			  SELECT T1.keyword,
			      T2.date_of,
			      SUM(T2.trade_num),
			      SUM(T2.volume),
			      SUM(T2.sales),
			      AVG(T2.pct),
			      NOW()
			  FROM    ibbd2.top_cat_items T1
			      LEFT JOIN
			         ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}} T2
			      ON     T1.item_id = T2.item_id
			  WHERE T2.item_id IS NOT NULL
			    AND T2.pct IS NOT NULL
			  GROUP BY T1.keyword, T2.date_of;
			{% end %}
	    ]]></exec>
	</task>

	<task name="12" deal="sync" depend="1,3"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.top_item2
			  SELECT * FROM ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>


	<task name="13" deal="sync" depend="1,12"> 
		<exec type="proc"><![CDATA[
			ibbd2.sp_ststc_cat_range_hotshops(DATE('{{reporter_date_range}}'), DATE('{{reporter_date}}'));
	    ]]></exec>
	</task>

	<task name="14" deal="sync" depend="1,12"> 
		<exec type="sql"><![CDATA[
			REPLACE INTO ibbd2.ststc_keyword_reporter
			  SELECT T1.keyword, '{{reporter_date}}',
			  COUNT(DISTINCT(CASE WHEN T3.shop_rank IS NULL THEN T1.user_num_id ELSE NULL END)) AS TmallShopNum,
			  COUNT(DISTINCT(CASE WHEN T3.shop_rank IS NOT NULL THEN T1.user_num_id ELSE NULL END)) AS CShopNum,
			  COUNT(DISTINCT(CASE WHEN T3.shop_rank IS NULL THEN T1.item_id ELSE NULL END)) AS TmallItemNum,
			  COUNT(DISTINCT(CASE WHEN T3.shop_rank IS NOT NULL THEN T1.item_id ELSE NULL END)) AS CItemNum,
			  SUM(CASE WHEN T1.site_id='2' THEN T2.volume ELSE 0 END) AS volume_b,
			  SUM(CASE WHEN T1.site_id<>'2' THEN T2.volume ELSE 0 END) AS volume_c,
			  SUM(CASE WHEN T1.site_id='2' THEN T2.trade_num ELSE 0 END) AS trade_num_b,
			  SUM(CASE WHEN T1.site_id<>'2' THEN T2.trade_num ELSE 0 END) AS trade_num_c,
			  AVG(T2.avg_deal_price),
			  AVG(CASE WHEN T1.site_id='2' THEN T2.avg_deal_price ELSE NULL END) AS avg_deal_price_b,
			  AVG(CASE WHEN T1.site_id<>'2' THEN T2.avg_deal_price ELSE NULL END) AS avg_deal_price_c,
			  SUM(CASE WHEN T1.site_id='2' THEN T2.sales ELSE 0 END) AS sales_b,
			  SUM(CASE WHEN T1.site_id<>'2' THEN T2.sales ELSE 0 END) AS sales_c,
			  AVG(T2.pct),
			  AVG(CASE WHEN T1.site_id='2' THEN T2.pct ELSE NULL END) AS pct_b,
			  AVG(CASE WHEN T1.site_id<>'2' THEN T2.pct ELSE NULL END) AS pct_c,
			  NOW()
			  FROM ibbd2.top_cat_items T1
			  LEFT JOIN ibbd2.top_item2 T2
			  ON T1.item_id = T2.item_id
			  AND T2.date_of='{{reporter_date}}'
			  LEFT JOIN ibbd2.top_shop1 T3
			  ON T1.user_num_id=T3.user_num_id
			  GROUP BY T1.keyword;
	    ]]></exec>
	</task>

	<task name="15" deal="async" depend="2"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			DROP TABLE IF EXISTS ibbd2.top_item_tradingtime_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>


	<task name="25" deal="async" depend="15"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			CREATE TABLE ibbd2.top_item_tradingtime_{{fetch_date.replace('-', '')}}_{{i+1}} LIKE ibbd2.top_item_tradingtime;
			{% end %}
	    ]]></exec>
	</task>
	<task name="26" deal="async" depend="25"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.top_item_tradingtime_{{fetch_date.replace('-', '')}}_{{i+1}}
			  SELECT item_id,
			      DATE(trade_time),
			      HOUR(trade_time),
			      SUM(amount),
			      SUM(price * amount),
			      NOW()
			  FROM topdata.top_item_trade_his_{{fetch_date.replace('-', '')}}_{{i+1}}
			  GROUP BY item_id, DATE(trade_time), HOUR(trade_time);
			{% end %}
	    ]]></exec>
	</task>

	<task name="16" deal="sync" depend="1,26"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
				INSERT IGNORE INTO ibbd2.quota_tradingtime_aly
				  SELECT T1.keyword,
				      T2.date_of,
				      T2.hour_of,
				      SUM(T2.volume),
				      SUM(T2.sales),
				      NOW()
				  FROM    ibbd2.top_cat_items T1
				      LEFT JOIN
				         ibbd2.top_item_tradingtime_{{fetch_date.replace('-', '')}}_{{i+1}} T2
				      ON     T1.item_id = T2.item_id
				  WHERE      T2.item_id IS NOT NULL
				         AND T2.date_of IS NOT NULL
				  GROUP BY T1.keyword, T2.date_of, T2.hour_of;
				{% end %}
	    ]]></exec>
	</task>

	<task name="27" deal="sync" depend="1,26"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			INSERT IGNORE INTO ibbd2.top_item_tradingtime
			  SELECT * FROM ibbd2.top_item_tradingtime_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>

	<task name="28" deal="sync" depend="1,16,27"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			DROP TABLE ibbd2.top_item_tradingtime_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>
	<task name="24" deal="async" depend="1,3,5,6,7,8,11,12,13,14"> 
		<exec type="sql"><![CDATA[
			{% for i in range(cache_table_num) %}
			DROP TABLE ibbd2.top_item2_{{fetch_date.replace('-', '')}}_{{i+1}};
			{% end %}
	    ]]></exec>
	</task>

</tasks>